{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wonnski\\\\Documents\\\\projekty\\\\portfolio\\\\src\\\\projects\\\\src\\\\components\\\\contexts\\\\CartContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  cart: [],\n  addToCart: product => {},\n  removeFromCart: (name, color) => {},\n  getTotalPrice: () => 0\n});\nexport const CartContextProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = productToAdd => {\n    const existingProduct = cart.find(product => product.name === productToAdd.name && product.color === productToAdd.color);\n    if (existingProduct) {\n      const updatedCart = cart.map(product => product === existingProduct ? {\n        ...product,\n        quantity: product.quantity + productToAdd.quantity\n      } : product);\n      setCart(updatedCart);\n    } else {\n      setCart(prevCart => [...prevCart, productToAdd]);\n    }\n  };\n  const removeFromCart = (name, color) => {\n    const updatedCart = cart.filter(product => !(product.name === name && product.color === color));\n    setCart(updatedCart);\n  };\n  const getTotalPrice = () => {\n    return cart.reduce((total, product) => {\n      return total + product.price * product.quantity;\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      getTotalPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CartContextProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","cart","addToCart","product","removeFromCart","name","color","getTotalPrice","CartContextProvider","children","_s","setCart","productToAdd","existingProduct","find","updatedCart","map","quantity","prevCart","filter","reduce","total","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Wonnski/Documents/projekty/portfolio/src/projects/src/components/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { Product } from \"../types/product\";\r\n\r\ninterface CartContextProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const CartContext = createContext<{\r\n  cart: Product[];\r\n  addToCart: (product: Product) => void;\r\n  removeFromCart: (name: string, color: string) => void;\r\n  getTotalPrice: () => number;\r\n}>({\r\n  cart: [],\r\n  addToCart: (product: Product) => {},\r\n  removeFromCart: (name: string, color: string) => {},\r\n  getTotalPrice: () => 0,\r\n});\r\n\r\nexport const CartContextProvider: React.FC<CartContextProps> = ({\r\n  children,\r\n}) => {\r\n  const [cart, setCart] = useState<Product[]>([]);\r\n\r\n  const addToCart = (productToAdd: Product) => {\r\n    const existingProduct = cart.find(\r\n      (product) =>\r\n        product.name === productToAdd.name &&\r\n        product.color === productToAdd.color\r\n    );\r\n\r\n    if (existingProduct) {\r\n      const updatedCart = cart.map((product) =>\r\n        product === existingProduct\r\n          ? { ...product, quantity: product.quantity + productToAdd.quantity }\r\n          : product\r\n      );\r\n      setCart(updatedCart);\r\n    } else {\r\n      setCart((prevCart) => [...prevCart, productToAdd]);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (name: string, color: string) => {\r\n    const updatedCart = cart.filter(\r\n      (product) => !(product.name === name && product.color === color)\r\n    );\r\n    setCart(updatedCart);\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return cart.reduce((total, product) => {\r\n      return total + product.price * product.quantity;\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ cart, addToCart, removeFromCart, getTotalPrice }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAKrC;EACDK,IAAI,EAAE,EAAE;EACRC,SAAS,EAAGC,OAAgB,IAAK,CAAC,CAAC;EACnCC,cAAc,EAAEA,CAACC,IAAY,EAAEC,KAAa,KAAK,CAAC,CAAC;EACnDC,aAAa,EAAEA,CAAA,KAAM;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAA+C,GAAGA,CAAC;EAC9DC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACT,IAAI,EAAEU,OAAO,CAAC,GAAGd,QAAQ,CAAY,EAAE,CAAC;EAE/C,MAAMK,SAAS,GAAIU,YAAqB,IAAK;IAC3C,MAAMC,eAAe,GAAGZ,IAAI,CAACa,IAAI,CAC9BX,OAAO,IACNA,OAAO,CAACE,IAAI,KAAKO,YAAY,CAACP,IAAI,IAClCF,OAAO,CAACG,KAAK,KAAKM,YAAY,CAACN,KACnC,CAAC;IAED,IAAIO,eAAe,EAAE;MACnB,MAAME,WAAW,GAAGd,IAAI,CAACe,GAAG,CAAEb,OAAO,IACnCA,OAAO,KAAKU,eAAe,GACvB;QAAE,GAAGV,OAAO;QAAEc,QAAQ,EAAEd,OAAO,CAACc,QAAQ,GAAGL,YAAY,CAACK;MAAS,CAAC,GAClEd,OACN,CAAC;MACDQ,OAAO,CAACI,WAAW,CAAC;IACtB,CAAC,MAAM;MACLJ,OAAO,CAAEO,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEN,YAAY,CAAC,CAAC;IACpD;EACF,CAAC;EAED,MAAMR,cAAc,GAAGA,CAACC,IAAY,EAAEC,KAAa,KAAK;IACtD,MAAMS,WAAW,GAAGd,IAAI,CAACkB,MAAM,CAC5BhB,OAAO,IAAK,EAAEA,OAAO,CAACE,IAAI,KAAKA,IAAI,IAAIF,OAAO,CAACG,KAAK,KAAKA,KAAK,CACjE,CAAC;IACDK,OAAO,CAACI,WAAW,CAAC;EACtB,CAAC;EAED,MAAMR,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAON,IAAI,CAACmB,MAAM,CAAC,CAACC,KAAK,EAAElB,OAAO,KAAK;MACrC,OAAOkB,KAAK,GAAGlB,OAAO,CAACmB,KAAK,GAAGnB,OAAO,CAACc,QAAQ;IACjD,CAAC,EAAE,CAAC,CAAC;EACP,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IACnBC,KAAK,EAAE;MAAEvB,IAAI;MAAEC,SAAS;MAAEE,cAAc;MAAEG;IAAc,CAAE;IAAAE,QAAA,EAEzDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA5CWF,mBAA+C;AAAAqB,EAAA,GAA/CrB,mBAA+C;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}